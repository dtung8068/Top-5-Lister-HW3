{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tungd.LAPTOP-8M0B2CR6\\\\Downloads\\\\CSE 316\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\ListCard.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This is a card in our list of top 5 lists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCard(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [deleteActive, setDeleteActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  store.history = useHistory();\n  const {\n    idNamePair,\n    selected\n  } = props;\n\n  function handleLoadList(event) {\n    if (!event.target.disabled && event.target.id !== \"delete-list-\" + idNamePair._id) {\n      let _id = event.target.id;\n      if (_id.indexOf('list-card-text-') >= 0) _id = (\"\" + _id).substring(\"list-card-text-\".length); // CHANGE THE CURRENT LIST\n\n      store.setCurrentList(_id);\n    }\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  function handleDeleteList(event) {\n    event.stopPropagation();\n    let newActive = !deleteActive;\n\n    if (newActive) {\n      store.setIsDeleteActive(idNamePair._id);\n    }\n\n    setDeleteActive(newActive);\n  }\n\n  let selectClass = \"unselected-list-card\";\n\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n\n  let cardStatus = false;\n\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n\n  let cardElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: idNamePair._id,\n    onClick: handleLoadList,\n    className: 'list-card ' + selectClass,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"list-card-text-\" + idNamePair._id,\n      className: \"list-card-text\",\n      children: idNamePair.name\n    }, \"span-\" + idNamePair._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"delete-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleDeleteList,\n      value: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"edit-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, idNamePair._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"list-\" + idNamePair._id,\n      className: \"list-card\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: idNamePair.name,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n  return cardElement;\n}\n\n_s(ListCard, \"PzoAB8ycFWaR6uleO7hCvfatSB8=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListCard;\nexport default ListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"sources":["C:/Users/tungd.LAPTOP-8M0B2CR6/Downloads/CSE 316/Top5Lists_HW3/client/src/components/ListCard.js"],"names":["useContext","useState","useHistory","GlobalStoreContext","ListCard","props","store","editActive","setEditActive","deleteActive","setDeleteActive","text","setText","history","idNamePair","selected","handleLoadList","event","target","disabled","id","_id","indexOf","substring","length","setCurrentList","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsListNameEditActive","handleKeyPress","code","changeListName","handleUpdateText","value","handleDeleteList","setIsDeleteActive","selectClass","cardStatus","isListNameEditActive","cardElement","name"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACG,kBAAD,CAA5B;AACA,QAAM,CAAEI,UAAF,EAAcC,aAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAEQ,YAAF,EAAgBC,eAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEU,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACAK,EAAAA,KAAK,CAACO,OAAN,GAAgBX,UAAU,EAA1B;AACA,QAAM;AAAEY,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BV,KAAjC;;AAEA,WAASW,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,QAAd,IAA0BF,KAAK,CAACC,MAAN,CAAaE,EAAb,KAAqB,iBAAiBN,UAAU,CAACO,GAA/E,EAAqF;AACjF,UAAIA,GAAG,GAAGJ,KAAK,CAACC,MAAN,CAAaE,EAAvB;AACA,UAAIC,GAAG,CAACC,OAAJ,CAAY,iBAAZ,KAAkC,CAAtC,EACID,GAAG,GAAG,CAAC,KAAKA,GAAN,EAAWE,SAAX,CAAqB,kBAAkBC,MAAvC,CAAN,CAH6E,CAKjF;;AACAlB,MAAAA,KAAK,CAACmB,cAAN,CAAqBJ,GAArB;AACH;AACJ;;AAED,WAASK,gBAAT,CAA0BT,KAA1B,EAAiC;AAC7BA,IAAAA,KAAK,CAACU,eAAN;AACAC,IAAAA,UAAU;AACb;;AAED,WAASA,UAAT,GAAsB;AAClB,QAAIC,SAAS,GAAG,CAACtB,UAAjB;;AACA,QAAIsB,SAAJ,EAAe;AACXvB,MAAAA,KAAK,CAACwB,uBAAN;AACH;;AACDtB,IAAAA,aAAa,CAACqB,SAAD,CAAb;AACH;;AAED,WAASE,cAAT,CAAwBd,KAAxB,EAA+B;AAC3B,QAAIA,KAAK,CAACe,IAAN,KAAe,OAAnB,EAA4B;AACxB,UAAIZ,EAAE,GAAGH,KAAK,CAACC,MAAN,CAAaE,EAAb,CAAgBG,SAAhB,CAA0B,QAAQC,MAAlC,CAAT;AACAlB,MAAAA,KAAK,CAAC2B,cAAN,CAAqBb,EAArB,EAAyBT,IAAzB;AACAiB,MAAAA,UAAU;AACb;AACJ;;AAED,WAASM,gBAAT,CAA0BjB,KAA1B,EAAiC;AAC7BL,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaiB,KAAd,CAAP;AACH;;AACD,WAASC,gBAAT,CAA0BnB,KAA1B,EAAiC;AAC7BA,IAAAA,KAAK,CAACU,eAAN;AACA,QAAIE,SAAS,GAAG,CAACpB,YAAjB;;AACA,QAAIoB,SAAJ,EAAe;AACXvB,MAAAA,KAAK,CAAC+B,iBAAN,CAAwBvB,UAAU,CAACO,GAAnC;AACH;;AACDX,IAAAA,eAAe,CAACmB,SAAD,CAAf;AACH;;AAED,MAAIS,WAAW,GAAG,sBAAlB;;AACA,MAAIvB,QAAJ,EAAc;AACVuB,IAAAA,WAAW,GAAG,oBAAd;AACH;;AACD,MAAIC,UAAU,GAAG,KAAjB;;AACA,MAAIjC,KAAK,CAACkC,oBAAV,EAAgC;AAC5BD,IAAAA,UAAU,GAAG,IAAb;AACH;;AACD,MAAIE,WAAW,gBACX;AACI,IAAA,EAAE,EAAE3B,UAAU,CAACO,GADnB;AAGI,IAAA,OAAO,EAAEL,cAHb;AAII,IAAA,SAAS,EAAE,eAAesB,WAJ9B;AAAA,4BAKI;AACI,MAAA,EAAE,EAAE,oBAAoBxB,UAAU,CAACO,GADvC;AAGI,MAAA,SAAS,EAAC,gBAHd;AAAA,gBAIKP,UAAU,CAAC4B;AAJhB,OAES,UAAU5B,UAAU,CAACO,GAF9B;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI;AACI,MAAA,QAAQ,EAAEkB,UADd;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,EAAE,EAAE,iBAAiBzB,UAAU,CAACO,GAHpC;AAII,MAAA,SAAS,EAAC,kBAJd;AAKI,MAAA,OAAO,EAAEe,gBALb;AAMI,MAAA,KAAK,EAAE;AANX;AAAA;AAAA;AAAA;AAAA,YAXJ,eAmBI;AACI,MAAA,QAAQ,EAAEG,UADd;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,EAAE,EAAE,eAAezB,UAAU,CAACO,GAHlC;AAII,MAAA,SAAS,EAAC,kBAJd;AAKI,MAAA,OAAO,EAAEK,gBALb;AAMI,MAAA,KAAK,EAAE;AANX;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA,KAESZ,UAAU,CAACO,GAFpB;AAAA;AAAA;AAAA;AAAA,UADJ;;AA8BA,MAAId,UAAJ,EAAgB;AACZkC,IAAAA,WAAW,gBACP;AACI,MAAA,EAAE,EAAE,UAAU3B,UAAU,CAACO,GAD7B;AAEI,MAAA,SAAS,EAAC,WAFd;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,UAAU,EAAEU,cAJhB;AAKI,MAAA,QAAQ,EAAEG,gBALd;AAMI,MAAA,YAAY,EAAEpB,UAAU,CAAC4B,IAN7B;AAOI,MAAA,SAAS;AAPb;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AACD,SACID,WADJ;AAGH;;GAzGQrC,Q;UAKWF,U;;;KALXE,Q;AA2GT,eAAeA,QAAf","sourcesContent":["import { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This is a card in our list of top 5 lists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction ListCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [ editActive, setEditActive ] = useState(false);\r\n    const [ deleteActive, setDeleteActive ] = useState(false);\r\n    const [ text, setText ] = useState(\"\");\r\n    store.history = useHistory();\r\n    const { idNamePair, selected } = props;\r\n\r\n    function handleLoadList(event) {\r\n        if (!event.target.disabled && event.target.id !== (\"delete-list-\" + idNamePair._id)) {\r\n            let _id = event.target.id;\r\n            if (_id.indexOf('list-card-text-') >= 0)\r\n                _id = (\"\" + _id).substring(\"list-card-text-\".length);\r\n\r\n            // CHANGE THE CURRENT LIST\r\n            store.setCurrentList(_id);\r\n        }\r\n    }\r\n\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsListNameEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        if (event.code === \"Enter\") {\r\n            let id = event.target.id.substring(\"list-\".length);\r\n            store.changeListName(id, text);\r\n            toggleEdit();\r\n        }\r\n    }\r\n\r\n    function handleUpdateText(event) {\r\n        setText(event.target.value );\r\n    }\r\n    function handleDeleteList(event) {\r\n        event.stopPropagation();\r\n        let newActive = !deleteActive;\r\n        if (newActive) {\r\n            store.setIsDeleteActive(idNamePair._id);\r\n        }\r\n        setDeleteActive(newActive);\r\n    }\r\n\r\n    let selectClass = \"unselected-list-card\";\r\n    if (selected) {\r\n        selectClass = \"selected-list-card\";\r\n    }\r\n    let cardStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        cardStatus = true;\r\n    }\r\n    let cardElement =\r\n        <div\r\n            id={idNamePair._id}\r\n            key={idNamePair._id}\r\n            onClick={handleLoadList}\r\n            className={'list-card ' + selectClass}>\r\n            <span\r\n                id={\"list-card-text-\" + idNamePair._id}\r\n                key={\"span-\" + idNamePair._id}\r\n                className=\"list-card-text\">\r\n                {idNamePair.name}\r\n            </span>\r\n            <input\r\n                disabled={cardStatus}\r\n                type=\"button\"\r\n                id={\"delete-list-\" + idNamePair._id}\r\n                className=\"list-card-button\"\r\n                onClick={handleDeleteList}\r\n                value={\"\\u2715\"}\r\n            />\r\n            <input\r\n                disabled={cardStatus}\r\n                type=\"button\"\r\n                id={\"edit-list-\" + idNamePair._id}\r\n                className=\"list-card-button\"\r\n                onClick={handleToggleEdit}\r\n                value={\"\\u270E\"}\r\n            />\r\n        </div>;\r\n\r\n    if (editActive) {\r\n        cardElement =\r\n            <input\r\n                id={\"list-\" + idNamePair._id}\r\n                className='list-card'\r\n                type='text'\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                defaultValue={idNamePair.name}\r\n                autoFocus\r\n            />;\r\n    }\r\n    return (\r\n        cardElement\r\n    );\r\n}\r\n\r\nexport default ListCard;"]},"metadata":{},"sourceType":"module"}