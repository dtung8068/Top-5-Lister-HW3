{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tungd.LAPTOP-8M0B2CR6\\\\Downloads\\\\CSE 316\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleEdit(event) {\n    //console.log(props.text);\n    //console.log(props.index);\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemNameEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress() {}\n\n  function handleUpdateText() {}\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  if (editActive) {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: 'item-' + (index + 1),\n      className: \"top5-item\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: props.text,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'item-' + (index + 1),\n      className: itemClass,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDragEnter: handleDragEnter,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      draggable: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"edit-item-\" + index + 1,\n        className: \"list-card-button\",\n        onClick: handleToggleEdit,\n        value: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), props.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Top5Item, \"a7U8PH+kyKrpzUxZbnTVCtMulpE=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["C:/Users/tungd.LAPTOP-8M0B2CR6/Downloads/CSE 316/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveItemTransaction","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsItemNameEditActive","handleKeyPress","handleUpdateText","index","itemClass","text"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Top5Item(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [ editActive, setEditActive ] = useState(false);\r\n    const [draggedTo, setDraggedTo] = useState(0);\r\n\r\n    function handleDragStart(event) {\r\n        event.dataTransfer.setData(\"item\", event.target.id);\r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(false);\r\n    }\r\n\r\n    function handleDrop(event) {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        let sourceId = event.dataTransfer.getData(\"item\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        setDraggedTo(false);\r\n\r\n        // UPDATE THE LIST\r\n        store.addMoveItemTransaction(sourceId, targetId);\r\n    }\r\n    function handleToggleEdit(event) {\r\n        //console.log(props.text);\r\n        //console.log(props.index);\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsItemNameEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n    function handleKeyPress() {\r\n\r\n    }\r\n    function handleUpdateText() {\r\n\r\n    }\r\n    let { index } = props;\r\n    let itemClass = \"top5-item\";\r\n    if (draggedTo) {\r\n        itemClass = \"top5-item-dragged-to\";\r\n    }\r\n    if(editActive) {\r\n        return (\r\n            <input\r\n                id={'item-' + (index + 1)}\r\n                className={\"top5-item\"}\r\n                type='text'\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                defaultValue={props.text}\r\n                autoFocus\r\n            />         \r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div\r\n                id={'item-' + (index + 1)}\r\n                className={itemClass}\r\n                onDragStart={handleDragStart}\r\n                onDragOver={handleDragOver}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n                onDrop={handleDrop}\r\n                draggable=\"true\"\r\n            >\r\n                <input\r\n                    type=\"button\"\r\n                    id={\"edit-item-\" + index + 1}\r\n                    className=\"list-card-button\"\r\n                    onClick = {handleToggleEdit}\r\n                    value={\"\\u270E\"}\r\n                />\r\n                {props.text}\r\n            </div>)\r\n    }\r\n    \r\n}\r\n\r\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}